family=binomial,
control=glmerControl(optimizer="bobyqa"),
method = 'LRT')
afex.Part2.Block <- mixed(RT ~ Condition * Block + (1|ParticipantID),
data=subset(Part2Data, TrialType2 == "Training") ,
control=glmerControl(optimizer="bobyqa"),
method = 'LRT')
afex.Part2.Block <- mixed(RT ~ Condition * Block + (1|ParticipantID),
data=subset(Part2Data, TrialType2 == "Training") ,
method = 'LRT')
afex.Part2.Block$anova_table
Exp6Sub <- subset(CleanData6, Condition =="6A"|Condition == "6B")
Exp6Sub$Condition <- factor(Exp6Sub$Condition)
Exp6Sub$Block <- factor(Exp6Sub$Block)
#Aggregating- Note this is only for the graph- we don't aggregate our data for analysis when using family = "binomial" - we model every single data point
Exp6SubAgg <- summarySE(Exp6Sub, measurevar = "RespCorr", groupvars = c("Condition", "TrialType2", "Block"))
afex.Exp6Sub <- mixed(RespCorr ~ Condition * TrialType2 + (1|ParticipantID),
data=Exp6Sub,
family=binomial,
control=glmerControl(optimizer="bobyqa"),
method = 'LRT',
progress=FALSE)
#Pretty up results and kick out as kable
afex.Exp6Sub$anova_table %>%
data.frame() %>%
tibble::rownames_to_column(var= "Variable") %>%
mutate_if(is.numeric, round, digits = 3) %>%
mutate_all(funs(ifelse(.<0.001, "<0.001", .))) %>%
`colnames<-`(c("Variable", "df", "Chi Sq", "Chi df", "p")) %>%
knitr::kable(caption = "Subcondition Comparison (Condition 6A and 6B)", ) %>%
kable_styling(full_width= F)
pd <- position_dodge(width = 0.1)
ggplot(data=Exp6Sub, aes(x=Block, y=RespCorr, group= Condition)) +
#geom_line(aes(color= Condition)) +
#geom_point(size=1.75, aes(colour = Condition)) +
geom_line(aes(linetype = Condition), size = 1.2, position=pd) +
geom_errorbar(aes(ymin= RespCorr - ci, ymax= RespCorr + ci), width= 0.2, size = 1, position=pd)+
scale_color_manual(values= c("#0066CC", "#CC0033","#33FF00", "#000000")) +
labs(x="Block", y="Proportion of Correct Responses") +
scale_y_continuous(limits = c(0.45,1), breaks=c(0.5,0.6,0.7,0.8,0.9,1.0)) +
facet_grid(~TrialType2, scales="free", space= "free_x") +
theme_alan() +
ggtitle("Comparing Subconditions of Condition 6")
pd <- position_dodge(width = 0.1)
ggplot(data=Exp6SubAgg, aes(x=Block, y=RespCorr, group= Condition)) +
#geom_line(aes(color= Condition)) +
#geom_point(size=1.75, aes(colour = Condition)) +
geom_line(aes(linetype = Condition), size = 1.2, position=pd) +
geom_errorbar(aes(ymin= RespCorr - ci, ymax= RespCorr + ci), width= 0.2, size = 1, position=pd)+
scale_color_manual(values= c("#0066CC", "#CC0033","#33FF00", "#000000")) +
labs(x="Block", y="Proportion of Correct Responses") +
scale_y_continuous(limits = c(0.45,1), breaks=c(0.5,0.6,0.7,0.8,0.9,1.0)) +
facet_grid(~TrialType2, scales="free", space= "free_x") +
theme_alan() +
ggtitle("Comparing Subconditions of Condition 6")
#GGSAVE
ggsave("C:/Users/Alank/Documents/GitHub/Stekic-et-al/Figures/Conventional Subconditions - 6.png", plot = last_plot(), device = NULL, path = NULL,
width = 8, height = 4, units = c("in", "cm", "mm"),
dpi = 600)
#Read in the data
Exp1Data <- read.csv("D:/Google Drive/Publications/Motivated vs conventional systematicity/Data/5B Data CSV.csv")
#Read in the data
Exp1Data <- read.csv("D:/Publications/Motivated vs conventional systematicity/Data/5B Data CSV.csv")
#Relabel the Condition Column
Exp1Data$Condition <- factor(Exp1Data$Condition,
levels = c(1,2,3,4),
labels = c("Iconic", "Conventional", "Mixed Systematicity", "Counter-Iconic"))
#Add the BlockMinus Column
Exp1Data$BlockMinus <- Exp1Data$Block - 1
#Add in subconditions for Condition 2- Conventional mappings can go one of two ways and we need to take a look at those right away
Exp1DataSub <- subset(Exp1Data, Condition == "Conventional")
Exp1DataSub$Holder <- paste(Exp1DataSub$Condition, substr(Exp1DataSub$Label, 1,2), sep = "-")
Exp1DataSub$SubCondition1 <- grepl("th",Exp1DataSub$Label)
Exp1DataSub$SubCondition2 <- paste(Exp1DataSub$SubCondition1, Exp1DataSub$LabelType, sep = "-" )
Exp1DataSub$SubCondition3 <- mapvalues(Exp1DataSub$SubCondition2,
from = c("TRUE-C", "FALSE-S", "FALSE-C", "TRUE-S"),
to = c("A", "A", "B", "B"))
#Look at the difference between subconditions-
SubConditions <- summarySE(data=Exp1DataSub,
measurevar = "RespCorr",
groupvars = "SubCondition3")
colnames(SubConditions) <- c("Subcondition", "N", "Mean", "SD", "SE", "CI")
knitr::kable(
SubConditions
%>%  mutate_if(is.numeric, round, digits = 3)
, caption = 'Experiment 1- Subcondition Descriptive Statistics') %>%
kable_styling(full_width = F)
#Very basic statistical comparison
afex.Exp1Sub <- mixed(RespCorr ~ SubCondition3 * Block + (1|ID),
data=Exp1DataSub,
family=binomial,
control=glmerControl(optimizer="bobyqa"),
method = 'LRT',
progress=FALSE)
#ANOVA Summary for reporting
afex.Exp1Sub$anova_table %>%
data.frame() %>%
tibble::rownames_to_column(var= "Variable") %>%
mutate_if(is.numeric, round, digits = 3) %>%
mutate_all(funs(ifelse(.<0.001, "<0.001", .))) %>%
`colnames<-`(c("Variable", "df", "Chi Sq", "Chi df", "p")) %>%
knitr::kable(caption = "Experiment 1- Subcondition Comparison", ) %>%
kable_styling(full_width= F)
#Full Table
summary(afex.Exp1Sub)
#Aggregating Data for Visualisation
Exp1SubAgg <- aggregate(RespCorr ~ SubCondition3 + Block + ID , data=Exp1DataSub, mean, na.rm= FALSE)
Exp1SubAgg$Block <- factor(Exp1SubAgg$Block)
#Plotting subconditions for visualisation
ggplot(data=Exp1SubAgg, aes(x=Block, y=RespCorr, group= SubCondition3)) +
#geom_line(aes(color= Condition)) +
#geom_point(size=1.75, aes(colour = Condition)) +
geom_smooth(method='loess', formula= y ~ x, se= TRUE, aes(linetype = SubCondition3)) +
# scale_linetype_manual(values = c("solid", "solid", "solid",
#                        "longdash", "longdash", "longdash", "dotdash",
#                        "dotted")) +
scale_color_manual(values= c("#0066CC", "#CC0033","#33FF00", "#000000")) +
labs(x="Block", y="Proportion of Correct Responses") +
scale_y_continuous(limits = c(0.45,1), breaks=c(0.5,0.6,0.7,0.8,0.9,1.0)) +
theme_tufte() +
ggtitle("Comparison of Conventional Subconditions of Experiment 1")
#use summarySE to aggregate data getting mean, standard deviation, standard error, arnd 95% confidence intervals for the data
Exp1Agg2 <- summarySE(Exp1Data, measurevar= "RespCorr", groupvars = c("Condition", "Block"))
Exp1Agg2$Block <- factor(Exp1Agg2$Block)
pd <- position_dodge(width = 0.1)
#Plotting with 95% confidence interval
ggplot(data=Exp1Agg2, aes(x=Block, y=RespCorr, group= Condition)) +
geom_line(aes(color = Condition, linetype= Condition), size = 1.2, position=pd) +
geom_errorbar(aes(ymin= RespCorr - ci, ymax= RespCorr + ci, color= Condition), width= 0.2, size = 1, position=pd) +
geom_point(aes(color = Condition, shape = Condition), size = 3, position=pd) +
labs(x="Block", y="Proportion of Correct Responses") +
scale_y_continuous(limits = c(0.45,1), breaks=c(0.5,0.6,0.7,0.8,0.9,1.0)) +
theme_alan() +
scale_linetype_manual(values = c("solid", "solid", "longdash", "longdash")) +
scale_color_manual(values= c("#a1dab4", "#41b6c4","#2c7fb8", "#253494")) +
scale_shape_manual(values= c(15,16,17,18)) +
theme(legend.position = c(0.85, 0.22)) +
theme(legend.key=element_blank())
#+
#ggtitle("Comparison of Conditions of Experiment 1")
ggsave("C:/Users/Alan Nielsen/Google Drive/Publications/Motivated vs conventional systematicity/Figures/Exp1Plot1.png",
plot = last_plot(), device = NULL, path = NULL,
width = 8, height = 4.5, units = c("in", "cm", "mm"),
dpi = 600)
library(lme4)
library(plyr)
library(ggplot2)
library(afex)
library(emmeans)
library(ggthemes)
library(tidyverse)
library(kableExtra)
library(Hmisc)
library(binom)
library(Rmisc)
library(magick)
library(webshot)
library(magrittr)
library(multcomp)
theme_alan <- function(base_size = 12 , base_family = "")
{
half_line <- base_size/2
colors <- ggthemes_data$few
gray <- colors$medium["gray"]
black <- colors$dark["black"]
theme(
line = element_line(colour = "black", size = 0.5, linetype = 1, lineend = "butt"),
rect = element_rect(fill = "white",
colour = "black", size = 0.5, linetype = 1),
text = element_text(family = base_family, face = "plain", colour = "black",
size = base_size, lineheight = 0.9, hjust = 0.5, vjust = 0.5,
angle = 0, margin = margin(), debug = FALSE),
axis.line = element_blank(),
axis.line.x = NULL,
axis.line.y = NULL,
axis.text = element_text(size = rel(0.8), colour = "grey30"),
axis.text.x = element_text(margin = margin(t = 0.8 * half_line/2), vjust = 1),
axis.text.x.top = element_text(margin = margin(b = 0.8 * half_line/2), vjust = 0),
axis.text.y = element_text(margin = margin(r = 0.8 * half_line/2), hjust = 1),
axis.text.y.right = element_text(margin = margin(l = 0.8 * half_line/2), hjust = 0),
axis.ticks = element_line(colour = "grey20"),
axis.ticks.length = unit(half_line/2, "pt"),
axis.title.x = element_text(margin = margin(t = half_line), vjust = 1),
axis.title.x.top = element_text(margin = margin(b = half_line), vjust = 0),
axis.title.y = element_text(angle = 90, margin = margin(r = half_line), vjust = 1),
axis.title.y.right = element_text(angle = -90, margin = margin(l = half_line), vjust = 0),
legend.background = element_rect(colour = NA),
legend.spacing = unit(0.4, "cm"),
legend.spacing.x = NULL,
legend.spacing.y = NULL,
legend.margin = margin(0.2, 0.2, 0.2, 0.2, "cm"),
legend.key = element_rect(fill = "white", colour = NA),
legend.key.size = unit(1.2, "lines"),
legend.key.height = NULL,
legend.key.width = NULL,
legend.text = element_text(size = rel(0.8)),
legend.text.align = NULL,
legend.title = element_text(hjust = 0),
legend.title.align = NULL,
legend.position = "right",
legend.direction = NULL,
legend.justification = "center",
legend.box = NULL,
legend.box.margin = margin(0, 0, 0, 0, "cm"),
legend.box.background = element_blank(),
legend.box.spacing = unit(0.4, "cm"),
panel.background = element_rect(fill = "white", colour = NA),
panel.border = element_rect(fill = NA, colour = "grey20"),
panel.grid.major = element_line(colour = "grey92"),
panel.grid.minor = element_line(colour = "grey92", size = 0.25),
panel.spacing = unit(half_line, "pt"),
panel.spacing.x = NULL,
panel.spacing.y = NULL,
panel.ontop = FALSE,
strip.background = element_rect(fill = "NA", colour = "NA"),
strip.text = element_text(colour = "grey10", size = rel(0.8)),
strip.text.x = element_text(margin = margin(t = half_line, b = half_line)),
strip.text.y = element_text(angle = 0, margin = margin(l = half_line, r = half_line)),
strip.placement = "inside",
strip.placement.x = NULL,
strip.placement.y = NULL,
strip.switch.pad.grid = unit(0.1, "cm"),
strip.switch.pad.wrap = unit(0.1, "cm"),
plot.background = element_rect(colour = "white"),
plot.title = element_text(size = rel(1.2), hjust = 0, vjust = 1, margin = margin(b = half_line * 1.2)),
plot.subtitle = element_text(size = rel(0.9), hjust = 0, vjust = 1, margin = margin(b = half_line * 0.9)),
plot.caption = element_text(size = rel(0.9), hjust = 1, vjust = 1, margin = margin(t = half_line * 0.9)),
plot.margin = margin(half_line, half_line, half_line, half_line),
complete = TRUE)
}
WestData <- read.csv("D:/Publications/Motivated vs Conventional Systematicity/Data/WestburyDataFull.csv")
#Cutting down the dataset to only words that use our phonemes of interest
#Vowels
#I = "\u026A" = ɪ = IH
#UH = "\u028C" = ʌ = UX
#EH = "\u025B" = ɛ = EH
#UGH = "\u028A" = ʊ = UH BUT NOT FOUND IN DATA
#ee = "i" = i = IY
#ew = "\u028F" = ʏ = NOT USED IN WESTBURY
#ah = "\u0251" = ɑ = NOT USED IN WESTBURY
#aw = "\u0252" = ɒ = AA
#th- "\u03B8" = θ = T
#thh- "\u00F0" = ð = xxxD - BUT NOT FOUND IN DATA
#sh- "\u0283" = ʃ = S
#dz- "\u02A4" = ʤ = J - BUT NOT FOUND IN DATA
#p,t,m,n - all standard
#vectors for mapvalues
fromlist = c("IH", "UX", "EH", "IY", "AA", "T", "D", "S")
tolist = c("\u026A", "\u028C", "\u025B", "i", "\u0252","\u03B8", "\u00F0", "\u0283")
fromtype = c(fromlist, "p", "t", "m", "n")
totype1 = c("Conventional", "Conventional", "Conventional", "Iconic", "Iconic", "Conventional",
"Conventional", "Conventional", rep("Iconic", 4))
totype2 = c(rep("Vowel", 5), rep("Consonant", 7))
#we're only going to use the zROUND.zSHARP and zLARGE.zSMALL columns of the actual data here
#cut the dataframe down
WestTrim <- subset(WestData, select = c(PHONO,
p,t,m,n,T,xxxD,S, #CONSONANTS
IH, UX, EH, IY, AA, #VOWELS
zLARGE.zSMALL, zROUND.zSHARP )) #METRICS
#Now we delete words that don't have any of our phonemes of interest
WestTrim$sum <- rowSums(WestTrim[2:13])
WestTrim %<>%
subset(sum != 0) %>%
subset(select = -c(sum))
#Converting to Long Format
WestTrimLong <-
WestTrim %>%
pivot_longer(
cols = p:AA,
names_to= "Phoneme",
values_to= "Contains"
)
Westbury.Size <-
WestTrimLong %>%
subset(Contains == "1") %>%
summarySE(measurevar = "zLARGE.zSMALL",
groupvars = "Phoneme")
Westbury.Shape <-
WestTrimLong %>%
subset(Contains == "1") %>%
summarySE(measurevar = "zROUND.zSHARP",
groupvars = "Phoneme")
Westbury.Summary <- cbind.data.frame(Westbury.Size$Phoneme, Westbury.Size$zLARGE.zSMALL, Westbury.Size$se,
Westbury.Shape$zROUND.zSHARP, Westbury.Shape$se)
colnames(Westbury.Summary) <- c("Phoneme", "Large-Mean", "Large-SE", "Round-Mean", "Round-SE")
Westbury.Summary$Type <- mapvalues(Westbury.Summary$Phoneme, from = fromtype, to=totype2)
Westbury.Summary$Mapping <- mapvalues(Westbury.Summary$Phoneme, from = fromtype, to=totype1)
Westbury.Summary$Phoneme <- mapvalues(Westbury.Summary$Phoneme, from = fromlist, to = tolist)
#Overall summary table
Westbury.Summary %>%
mutate_if(is.numeric, round, digits = 3) %>%
dplyr::select(Phoneme, Type:Mapping, 2:5) %>%
knitr::kable(caption = "Westbury - Phonemes Table", ) %>%
kable_styling(full_width= F)
##Consonants x Shape
Westbury.Summary.ConsShape <-
Westbury.Summary %>%
mutate_if(is.numeric, round, digits = 3) %>%
filter(Type  == "Consonant")%>%
dplyr::select(Phoneme, Type:Mapping, 4:5) %>%
arrange(`Round-Mean`)
Westbury.Summary.ConsShape %>%
knitr::kable(caption = "Westbury - Consonants x Shape", ) %>%
kable_styling(full_width= F)
##Vowels x Size
Westbury.Summary %>%
mutate_if(is.numeric, round, digits = 3) %>%
filter(Type  == "Vowel")%>%
dplyr::select(Phoneme, Type:Mapping, 2:3) %>%
arrange(`Large-Mean`)%>%
knitr::kable(caption = "Westbury - Vowels x Size", ) %>%
kable_styling(full_width= F)
##Consonants x Size
Westbury.Summary %>%
mutate_if(is.numeric, round, digits = 3) %>%
filter(Type  == "Consonant")%>%
dplyr::select(Phoneme, Type:Mapping, 2:3) %>%
arrange(`Large-Mean`)%>%
knitr::kable(caption = "Westbury - Consonants x Size", ) %>%
kable_styling(full_width= F)
##Vowels x Shape
Westbury.Summary %>%
mutate_if(is.numeric, round, digits = 3) %>%
filter(Type  == "Vowel")%>%
dplyr::select(Phoneme, Type:Mapping, 4:5) %>%
arrange(`Round-Mean`)%>%
knitr::kable(caption = "Westbury - Vowels x Shape", ) %>%
kable_styling(full_width= F)
ArbSub <- subset(CleanData6, Condition ==7|Condition == 8|Condition == 9)
ArbSub$Condition <- factor(ArbSub$Condition)
ArbSub$Block <- factor(ArbSub$Block)
#Aggregating- Note this is only for the graph- we don't aggregate our data for analysis when using family = "binomial" - we model every single data point
ArbSubAgg <- summarySE(ArbSub, measurevar = "RespCorr", groupvars = c("Condition", "TrialType2", "Block"))
afex.ArgSub <- mixed(RespCorr ~ Condition * TrialType2 + (1|ParticipantID),
data=ArbSub,
family=binomial,
control=glmerControl(optimizer="bobyqa"),
method = 'LRT',
progress=FALSE)
#Pretty up results and kick out as kable
afex.ArgSub$anova_table %>%
data.frame() %>%
tibble::rownames_to_column(var= "Variable") %>%
mutate_if(is.numeric, round, digits = 3) %>%
mutate_all(funs(ifelse(.<0.001, "<0.001", .))) %>%
`colnames<-`(c("Variable", "df", "Chi Sq", "Chi df", "p")) %>%
knitr::kable(caption = "Arbitrary Condition Comparison (Conditions 7,8,9)", ) %>%
kable_styling(full_width= F)
pd <- position_dodge(width = 0.1)
ggplot(data=ArbSubAgg, aes(x=Block, y=RespCorr, group= Condition)) +
#geom_line(aes(color= Condition)) +
#geom_point(size=1.75, aes(colour = Condition)) +
geom_line(aes(linetype = Condition), size = 1.2, position=pd) +
geom_errorbar(aes(ymin= RespCorr - ci, ymax= RespCorr + ci), width= 0.2, size = 1, position=pd)+
scale_color_manual(values= c("#0066CC", "#CC0033","#33FF00", "#000000")) +
labs(x="Block", y="Proportion of Correct Responses") +
scale_y_continuous(limits = c(0.45,1), breaks=c(0.5,0.6,0.7,0.8,0.9,1.0)) +
facet_grid(~TrialType2, scales="free", space= "free_x") +
theme_alan() +
ggtitle("Comparing Subconditions of Condition 6")
#GGSAVE
ggsave("C:/Users/Alank/Documents/GitHub/Stekic-et-al/Figures/Conventional Subconditions - 6.png", plot = last_plot(), device = NULL, path = NULL,
width = 8, height = 4, units = c("in", "cm", "mm"),
dpi = 600)
ArbSub <- subset(CleanData6, Condition ==7|Condition == 8|Condition == 9)
ArbSub$Condition <- factor(ArbSub$Condition)
ArbSub$Block <- factor(ArbSub$Block)
#Aggregating- Note this is only for the graph- we don't aggregate our data for analysis when using family = "binomial" - we model every single data point
ArbSubAgg <- summarySE(ArbSub, measurevar = "RespCorr", groupvars = c("Condition", "TrialType2", "Block"))
afex.ArgSub <- mixed(RespCorr ~ Condition * TrialType2 + (1|ParticipantID),
data=ArbSub,
family=binomial,
control=glmerControl(optimizer="bobyqa"),
method = 'LRT',
progress=FALSE)
#Pretty up results and kick out as kable
afex.ArgSub$anova_table %>%
data.frame() %>%
tibble::rownames_to_column(var= "Variable") %>%
mutate_if(is.numeric, round, digits = 3) %>%
mutate_all(funs(ifelse(.<0.001, "<0.001", .))) %>%
`colnames<-`(c("Variable", "df", "Chi Sq", "Chi df", "p")) %>%
knitr::kable(caption = "Arbitrary Condition Comparison (Conditions 7,8,9)", ) %>%
kable_styling(full_width= F)
pd <- position_dodge(width = 0.1)
ggplot(data=ArbSubAgg, aes(x=Block, y=RespCorr, group= Condition)) +
#geom_line(aes(color= Condition)) +
#geom_point(size=1.75, aes(colour = Condition)) +
geom_line(aes(linetype = Condition), size = 1.2, position=pd) +
geom_errorbar(aes(ymin= RespCorr - ci, ymax= RespCorr + ci), width= 0.2, size = 1, position=pd)+
scale_color_manual(values= c("#0066CC", "#CC0033","#33FF00", "#000000")) +
labs(x="Block", y="Proportion of Correct Responses") +
scale_y_continuous(limits = c(0.45,1), breaks=c(0.5,0.6,0.7,0.8,0.9,1.0)) +
facet_grid(~TrialType2, scales="free", space= "free_x") +
theme_alan() +
ggtitle("Comparing Subconditions of Condition 6")
#GGSAVE
ggsave("C:/Users/Alank/Documents/GitHub/Stekic-et-al/Figures/Arbitrary Condtions (7,8,9).png", plot = last_plot(), device = NULL, path = NULL,
width = 8, height = 4, units = c("in", "cm", "mm"),
dpi = 600)
Part3Data <- subset(CleanData6, Condition == 10|Condition == 4|Condition == 5|Condition == "6A"|Condition == "6B"
|Condition == 7|Condition == 8|Condition == 9)
Part3Data$Condition <- factor(Part2Data$Condition,
levels= c(10, 4, 5, "6A", "6B", 7, 8, 9),
labels = c("No Label", "Iconic", "Counter-Iconic", "Conventional", "Conventional", rep("Arbitrary",3)))
Part3Data$Condition <- factor(Part3Data$Condition,
levels= c(10, 4, 5, "6A", "6B", 7, 8, 9),
labels = c("No Label", "Iconic", "Counter-Iconic", "Conventional", "Conventional", rep("Arbitrary",3)))
View(Part3Data)
Part3Data <- subset(CleanData6, Condition == 10|Condition == 4|Condition == 5|Condition == "6A"|Condition == "6B"
|Condition == 7|Condition == 8|Condition == 9)
# Name the levels of Condition, rather than having them be numbers
# This also collapses subconditions 3A and 3B (justified above)
Part3Data$Condition <- factor(Part3Data$Condition,
levels= c(10, 4, 5, "6A", "6B", 7, 8, 9),
labels = c("No Label", "Iconic", "Counter-Iconic", "Conventional", "Conventional", rep("Arbitrary",3)))
# Subsetting out only the conditions for the replication
Part3Data <- subset(CleanData6, Condition == 10|Condition == 4|Condition == 5|Condition == "6A"|Condition == "6B"
|Condition == 7|Condition == 8|Condition == 9)
# Name the levels of Condition, rather than having them be numbers
# This also collapses subconditions 3A and 3B (justified above)
Part3Data$Condition <- factor(Part3Data$Condition,
levels= c(10, 4, 5, "6A", "6B", 7, 8, 9),
labels = c("No Label", "Iconic", "Counter-Iconic", "Conventional", "Conventional", rep("Arbitrary",3)))
#Aggregate our data for plotting
Part3Agg <- summarySE(Part3Data, measurevar = "RespCorr", groupvars = c("Condition", "TrialType2", "Block"))
Part3Agg$Block <- factor(Part3Agg$Block)
#Plot our data
ggplot(data=Part3Agg, aes(x=Block, y=RespCorr, group= Condition)) +
geom_line(aes(linetype = "dashed", color = Condition), size = 1.2, position=pd) +
geom_errorbar(aes(ymin= RespCorr - ci, ymax= RespCorr + ci, color= Condition), width= 0.2, size = 1, position=pd)+
scale_color_manual(values= c("#000000", "#c144c1","#8b2e8b", "#652165", "gray")) +
#scale_linetype_manual(values = c("dashed", rep("solid",3))) +
labs(x="Block", y="Proportion of Correct Responses") +
scale_y_continuous(limits = c(0.40,1), breaks=c(0.5,0.6,0.7,0.8,0.9,1.0)) +
facet_grid(~TrialType2, scales="free", space= "free_x") +
theme_alan() +
ggtitle("Category Label Comparison")
#GGSAVE
ggsave("C:/Users/Alank/Documents/GitHub/Stekic-et-al/Figures/Individual Labels.png", plot = last_plot(), device = NULL, path = NULL,
width = 8, height = 4, units = c("in", "cm", "mm"),
dpi = 600)
# Subsetting out only the conditions for the replication
Part3Data <- subset(CleanData6, Condition == 10|Condition == 4|Condition == 5|Condition == "6A"|Condition == "6B"
|Condition == 7|Condition == 8|Condition == 9)
# Name the levels of Condition, rather than having them be numbers
# This also collapses subconditions 3A and 3B (justified above)
Part3Data$Condition <- factor(Part3Data$Condition,
levels= c(10, 4, 5, "6A", "6B", 7, 8, 9),
labels = c("No Label", "Iconic", "Counter-Iconic", "Conventional", "Conventional", rep("Arbitrary",3)))
#Aggregate our data for plotting
Part3Agg <- summarySE(Part3Data, measurevar = "RespCorr", groupvars = c("Condition", "TrialType2", "Block"))
Part3Agg$Block <- factor(Part3Agg$Block)
#Plot our data
ggplot(data=Part3Agg, aes(x=Block, y=RespCorr, group= Condition)) +
geom_line(aes(linetype = Condition, color = Condition), size = 1.2, position=pd) +
geom_errorbar(aes(ymin= RespCorr - ci, ymax= RespCorr + ci, color= Condition), width= 0.2, size = 1, position=pd)+
scale_color_manual(values= c("#000000", "#c144c1","#8b2e8b", "#652165", "gray")) +
scale_linetype_manual(values = c(rep("dashed",5))) +
labs(x="Block", y="Proportion of Correct Responses") +
scale_y_continuous(limits = c(0.40,1), breaks=c(0.5,0.6,0.7,0.8,0.9,1.0)) +
facet_grid(~TrialType2, scales="free", space= "free_x") +
theme_alan() +
ggtitle("Category Label Comparison")
#GGSAVE
ggsave("C:/Users/Alank/Documents/GitHub/Stekic-et-al/Figures/Individual Labels.png", plot = last_plot(), device = NULL, path = NULL,
width = 8, height = 4, units = c("in", "cm", "mm"),
dpi = 600)
afex.Part3 <- mixed(RespCorr ~ Condition * TrialType2 + (1|ParticipantID),
data=Part3Data,
family=binomial,
control=glmerControl(optimizer="bobyqa"),
method = 'LRT')
#Pretty up results and kick out as kable
afex.Part3$anova_table %>%
data.frame() %>%
tibble::rownames_to_column(var= "Variable") %>%
mutate_if(is.numeric, round, digits = 3) %>%
mutate_all(funs(ifelse(.<0.001, "<0.001", .))) %>%
`colnames<-`(c("Variable", "df", "Chi Sq", "Chi df", "p")) %>%
knitr::kable(caption = "Mixed Model Results - Part 2", ) %>%
kable_styling(full_width= F)
summary(afex.Part3)$coefficients
levels(Part3Data$Condition)
summary(afex.Part3)$coefficients  %>%
data.frame() %>%
tibble::rownames_to_column(var= "FixedEffect") %>%
mutate(FixedEffect = recode_factor(FixedEffect,
`Condition1` = "Iconic",
`Condition2` = "Counter-Iconic",
`Condition3` = "Conventional",
`Condition4` = "Arbitrary",
`TrialType21` = "Testing - Old",
`TrialType22` = "Testing - New",
`Condition1:TrialType21` = "Iconic x Testing - Old",
`Condition2:TrialType21` = "Counter-Iconic x Testing - Old",
`Condition3:TrialType21` = "Conventional x Testing - Old",
`Condition4:TrialType21` = "Arbitrary x Testing - Old",
`Condition1:TrialType22` = "Iconic x Testing - New",
`Condition2:TrialType22` = "Counter-Iconic x Testing - New",
`Condition3:TrialType22` = "Conventional x Testing - New",
`Condition4:TrialType22` = "Arbitrary x Testing - New"
)) %>%
`colnames<-`(c("Fixed Effect", "Estimate", "SE", "z", "p")) %>%
mutate_if(is.numeric, round, digits = 3) %>%
mutate_at("p", funs(ifelse(.<0.001, "<0.001", .))) %>%
knitr::kable(caption = "Word Type Comparison- Fixed Effects Table", ) %>%
kable_styling(full_width= F) %>%
pack_rows("Intercept", 1, 1) %>%
pack_rows("Condition", 2, 5) %>%
pack_rows("Trial Type", 6, 7)%>%
pack_rows("Condition x Trial Type Interactions", 8, 15)
