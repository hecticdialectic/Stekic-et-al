funs(ifelse(.<0.001, "<0.001", .))) %>%
knitr::kable(caption = 'Part II- Descriptive Statistics - Condition', "html") %>%
kable_styling(full_width = F) %>%
add_header_above(c("", "Descriptive Stats" = 3, "Comparison to Chance" = 2,
"vs No Label" = 1,
"vs Iconic" = 1,
"vs Counter-Iconic" = 1,
"vs Conventional" = 1),
font_size = 12)
colnames(Part2.Condition.Combo) <- c("Condition", "n", "Mean", "SE",
"z v chance", "p v chance",
"No Label",
"Iconic",
"Counter-Iconic",
"Conventional"
)
###Knitting Condition Table
Part2.Condition.Combo %>%
mutate_if(is.numeric, round, 3) %>%
mutate_at(.vars = "z v chance", round, 2)%>%
mutate_at(.vars = vars("p v chance", "No Label", "Iconic", "Counter-Iconic", "Conventional"),
funs(ifelse(.<0.001, "<0.001", .))) %>%
knitr::kable(caption = 'Part II- Descriptive Statistics - Condition', "html") %>%
kable_styling(full_width = F) %>%
add_header_above(c("", "Descriptive Stats" = 3, "Comparison to Chance" = 2,
"vs No Label" = 1,
"vs Iconic" = 1,
"vs Counter-Iconic" = 1,
"vs Conventional" = 1),
font_size = 12)
colnames(Part2.Condition.Combo) <- c("Condition", "n", "Mean", "SE",
"z", "p",
"No Label",
"Iconic",
"Counter-Iconic",
"Conventional"
)
###Knitting Condition Table
Part2.Condition.Combo %>%
mutate_if(is.numeric, round, 3) %>%
mutate_at(.vars = "z v chance", round, 2)%>%
mutate_at(.vars = vars("p v chance", "No Label", "Iconic", "Counter-Iconic", "Conventional"),
funs(ifelse(.<0.001, "<0.001", .))) %>%
knitr::kable(caption = 'Part II- Descriptive Statistics - Condition', "html") %>%
kable_styling(full_width = F) %>%
add_header_above(c("", "Descriptive Stats" = 3,
"Post-Hoc Comparison to Chance" = 2,
"Post-Hoc Comparisons to Other Conditions (p values)" = 4),
font_size = 12)
colnames(Part2.Condition.Combo) <- c("Condition", "n", "Mean", "SE",
"z", "p",
"No Label",
"Iconic",
"Counter-Iconic",
"Conventional"
)
###Knitting Condition Table
Part2.Condition.Combo %>%
mutate_if(is.numeric, round, 3) %>%
mutate_at(.vars = "z", round, 2)%>%
mutate_at(.vars = vars("p", "No Label", "Iconic", "Counter-Iconic", "Conventional"),
funs(ifelse(.<0.001, "<0.001", .))) %>%
knitr::kable(caption = 'Part II- Descriptive Statistics - Condition', "html") %>%
kable_styling(full_width = F) %>%
add_header_above(c("", "Descriptive Stats" = 3,
"Post-Hoc Comparison to Chance" = 2,
"Post-Hoc Comparisons to Other Conditions (p values)" = 4),
font_size = 12)
#EMMeans of Interaction Terms vs Chance
Part2.Interaction.vChance <- test(emmeans(afex.Exp2,
~Condition2 * TrialType,
adjust = "none"))
#EM Means of Interaction Terms vs Each Other
Part2.Interaction.vPairs <- data.frame(pairs(emmeans(afex.Exp2,
~Condition2 * TrialType,
adjust = "none")))
# TRAINING TABLE
#summary Stats
Part2.Condition.Training <- summarySE(data=subset(Exp2Data, TrialType == "Training"),
measurevar = "RespCorr",
groupvars = "Condition2")
#EM Means comparisons table
Part2.Interaction.vPairs.Training.1 <-   rbind(rep(NA,6),Part2.Interaction.vPairs[1:3,])
Part2.Interaction.vPairs.Training.2 <-   rbind(Part2.Interaction.vPairs[1,], rep(NA, 6),
Part2.Interaction.vPairs[8:9,])
Part2.Interaction.vPairs.Training.3 <-   rbind(Part2.Interaction.vPairs[2,], Part2.Interaction.vPairs[8,],
rep(NA, 6), Part2.Interaction.vPairs[14,])
Part2.Interaction.vPairs.Training.4 <-   rbind(Part2.Interaction.vPairs[3,], Part2.Interaction.vPairs[9,],
Part2.Interaction.vPairs[14,], rep(NA, 6))
Part2.Condition.Combo.Training <- cbind.data.frame (
Part2.Condition.Training$Condition2, Part2.Condition.Training$N,
Part2.Condition.Training$RespCorr, Part2.Condition.Training$se,
Part2.Interaction.vChance$z.ratio[1:4],Part2.Interaction.vChance$p.value[1:4],
Part2.Interaction.vPairs.Training.1$p.value, Part2.Interaction.vPairs.Training.2$p.value,
Part2.Interaction.vPairs.Training.3$p.value, Part2.Interaction.vPairs.Training.4$p.value)
colnames(Part2.Condition.Combo.Training) <- c("Condition", "n", "Mean", "SE",
"z", "p",
"No Label",
"Iconic",
"Counter-Iconic",
"Conventional"
)
# TESTING TABLE
#summary Stats
Part2.Condition.Testing <- summarySE(data=subset(Exp2Data, TrialType == "Testing"),
measurevar = "RespCorr",
groupvars = "Condition2")
#EM Means comparisons table
Part2.Interaction.vPairs.Testing.1 <-   rbind(rep(NA,6),Part2.Interaction.vPairs[23:25,])
Part2.Interaction.vPairs.Testing.2 <-   rbind(Part2.Interaction.vPairs[23,], rep(NA, 6),
Part2.Interaction.vPairs[26:27,])
Part2.Interaction.vPairs.Testing.3 <-   rbind(Part2.Interaction.vPairs[24,], Part2.Interaction.vPairs[26,],
rep(NA, 6), Part2.Interaction.vPairs[28,])
Part2.Interaction.vPairs.Testing.4 <-   rbind(Part2.Interaction.vPairs[25,], Part2.Interaction.vPairs[27,],
Part2.Interaction.vPairs[28], rep(NA, 6))
#EMMeans of Interaction Terms vs Chance
Part2.Interaction.vChance <- test(emmeans(afex.Exp2,
~Condition2 * TrialType,
adjust = "none"))
#EM Means of Interaction Terms vs Each Other
Part2.Interaction.vPairs <- data.frame(pairs(emmeans(afex.Exp2,
~Condition2 * TrialType,
adjust = "none")))
# TRAINING TABLE
#summary Stats
Part2.Condition.Training <- summarySE(data=subset(Exp2Data, TrialType == "Training"),
measurevar = "RespCorr",
groupvars = "Condition2")
#EM Means comparisons table
Part2.Interaction.vPairs.Training.1 <-   rbind(rep(NA,6),Part2.Interaction.vPairs[1:3,])
Part2.Interaction.vPairs.Training.2 <-   rbind(Part2.Interaction.vPairs[1,], rep(NA, 6),
Part2.Interaction.vPairs[8:9,])
Part2.Interaction.vPairs.Training.3 <-   rbind(Part2.Interaction.vPairs[2,], Part2.Interaction.vPairs[8,],
rep(NA, 6), Part2.Interaction.vPairs[14,])
Part2.Interaction.vPairs.Training.4 <-   rbind(Part2.Interaction.vPairs[3,], Part2.Interaction.vPairs[9,],
Part2.Interaction.vPairs[14,], rep(NA, 6))
Part2.Condition.Combo.Training <- cbind.data.frame (
Part2.Condition.Training$Condition2, Part2.Condition.Training$N,
Part2.Condition.Training$RespCorr, Part2.Condition.Training$se,
Part2.Interaction.vChance$z.ratio[1:4],Part2.Interaction.vChance$p.value[1:4],
Part2.Interaction.vPairs.Training.1$p.value, Part2.Interaction.vPairs.Training.2$p.value,
Part2.Interaction.vPairs.Training.3$p.value, Part2.Interaction.vPairs.Training.4$p.value)
colnames(Part2.Condition.Combo.Training) <- c("Condition", "n", "Mean", "SE",
"z", "p",
"No Label",
"Iconic",
"Counter-Iconic",
"Conventional"
)
# TESTING TABLE
#summary Stats
Part2.Condition.Testing <- summarySE(data=subset(Exp2Data, TrialType == "Testing"),
measurevar = "RespCorr",
groupvars = "Condition2")
#EM Means comparisons table
Part2.Interaction.vPairs.Testing.1 <-   rbind(rep(NA,6),Part2.Interaction.vPairs[23:25,])
Part2.Interaction.vPairs.Testing.2 <-   rbind(Part2.Interaction.vPairs[23,], rep(NA, 6),
Part2.Interaction.vPairs[26:27,])
Part2.Interaction.vPairs.Testing.3 <-   rbind(Part2.Interaction.vPairs[24,], Part2.Interaction.vPairs[26,],
rep(NA, 6), Part2.Interaction.vPairs[28,])
Part2.Interaction.vPairs.Testing.4 <-   rbind(Part2.Interaction.vPairs[25,], Part2.Interaction.vPairs[27,],
Part2.Interaction.vPairs[28,], rep(NA, 6))
Part2.Condition.Combo.Testing <- cbind.data.frame (
Part2.Condition.Testing$Condition2, Part2.Condition.Testing$N,
Part2.Condition.Testing$RespCorr, Part2.Condition.Testing$se,
Part2.Interaction.vChance$z.ratio[5:8],Part2.Interaction.vChance$p.value[5:8],
Part2.Interaction.vPairs.Testing.1$p.value, Part2.Interaction.vPairs.Testing.2$p.value,
Part2.Interaction.vPairs.Testing.3$p.value, Part2.Interaction.vPairs.Testing.4$p.value)
colnames(Part2.Condition.Combo.Testing) <- c("Condition", "n", "Mean", "SE",
"z", "p",
"No Label",
"Iconic",
"Counter-Iconic",
"Conventional"
)
#OUTPUT WHOLE TABLE
OutputTable <- rbind.data.frame(Part2.Condition.Combo, Part2.Condition.Combo.Training, Part2.Condition.Combo.Testing )
View(OutputTable)
OutputTable %>%
mutate_if(is.numeric, round, 3) %>%
mutate_at(.vars = vars("NL (T)", "I (T)", "CI (T)", "Con (T)"),
funs(ifelse(.<0.001, "<0.001", .))) %>%
knitr::kable(caption = 'Experiment 2 - Post Hoc Comparisons of Conditions and their interactions with Trial Type',
"html") %>%
kable_styling(full_width = F) %>%
add_header_above(c("", "Descriptive Stats" = 3,
"Post-Hoc Comparison to Chance" = 2,
"Post-Hoc Comparisons to Other Conditions (p values)" = 4),
font_size = 12)
OutputTable %>%
mutate_if(is.numeric, round, 3) %>%
mutate_at(.vars = "z", round, 2)%>%
mutate_at(.vars = vars("p", "No Label", "Iconic", "Counter-Iconic", "Conventional"),
funs(ifelse(.<0.001, "<0.001", .))) %>%
knitr::kable(caption = 'Part II- Descriptive Statistics - Condition', "html") %>%
kable_styling(full_width = F) %>%
add_header_above(c("", "Descriptive Stats" = 3,
"Post-Hoc Comparison to Chance" = 2,
"Post-Hoc Comparisons to Other Conditions (p values)" = 4),
font_size = 12)
OutputTable %>%
mutate_if(is.numeric, round, 3) %>%
mutate_at(.vars = "z", round, 2)%>%
mutate_at(.vars = vars("p", "No Label", "Iconic", "Counter-Iconic", "Conventional"),
funs(ifelse(.<0.001, "<0.001", .))) %>%
knitr::kable(caption = 'Part II- Descriptive Statistics - Condition', "html") %>%
kable_styling(full_width = F) %>%
add_header_above(c("", "Descriptive Stats" = 3,
"Post-Hoc Comparison to Chance" = 2,
"Post-Hoc Comparisons between Conditions (p values)" = 4),
font_size = 12)
OutputTable %>%
mutate_if(is.numeric, round, 3) %>%
mutate_at(.vars = "z", round, 2)%>%
mutate_at(.vars = vars("p", "No Label", "Iconic", "Counter-Iconic", "Conventional"),
funs(ifelse(.<0.001, "<0.001", .))) %>%
knitr::kable(caption = 'Part II- Descriptive Statistics - Condition', "html") %>%
kable_styling(full_width = F) %>%
add_header_above(c("", "Descriptive Stats" = 3,
"Post-Hoc Comparison to Chance" = 2,
"Post-Hoc Comparisons between Conditions (p vals)" = 4),
font_size = 12)
#EMMeans of Interaction Terms vs Chance
Part2.Interaction.vChance <- test(emmeans(afex.Exp2,
~Condition2 * TrialType,
adjust = "none"))
#EM Means of Interaction Terms vs Each Other
Part2.Interaction.vPairs <- data.frame(pairs(emmeans(afex.Exp2,
~Condition2 * TrialType,
adjust = "none")))
# TRAINING TABLE
#summary Stats
Part2.Condition.Training <- summarySE(data=subset(Exp2Data, TrialType == "Training"),
measurevar = "RespCorr",
groupvars = "Condition2")
#EM Means comparisons table
Part2.Interaction.vPairs.Training.1 <-   rbind(rep(NA,6),Part2.Interaction.vPairs[1:3,])
Part2.Interaction.vPairs.Training.2 <-   rbind(Part2.Interaction.vPairs[1,], rep(NA, 6),
Part2.Interaction.vPairs[8:9,])
Part2.Interaction.vPairs.Training.3 <-   rbind(Part2.Interaction.vPairs[2,], Part2.Interaction.vPairs[8,],
rep(NA, 6), Part2.Interaction.vPairs[14,])
Part2.Interaction.vPairs.Training.4 <-   rbind(Part2.Interaction.vPairs[3,], Part2.Interaction.vPairs[9,],
Part2.Interaction.vPairs[14,], rep(NA, 6))
Part2.Condition.Combo.Training <- cbind.data.frame (
Part2.Condition.Training$Condition2, Part2.Condition.Training$N,
Part2.Condition.Training$RespCorr, Part2.Condition.Training$se,
Part2.Interaction.vChance$z.ratio[1:4],Part2.Interaction.vChance$p.value[1:4],
Part2.Interaction.vPairs.Training.1$p.value, Part2.Interaction.vPairs.Training.2$p.value,
Part2.Interaction.vPairs.Training.3$p.value, Part2.Interaction.vPairs.Training.4$p.value)
colnames(Part2.Condition.Combo.Training) <- c("Condition", "n", "Mean", "SE",
"z", "p",
"No Label",
"Iconic",
"Counter-Iconic",
"Conventional"
)
# TESTING TABLE
#summary Stats
Part2.Condition.Testing <- summarySE(data=subset(Exp2Data, TrialType == "Testing"),
measurevar = "RespCorr",
groupvars = "Condition2")
#EM Means comparisons table
Part2.Interaction.vPairs.Testing.1 <-   rbind(rep(NA,6),Part2.Interaction.vPairs[23:25,])
Part2.Interaction.vPairs.Testing.2 <-   rbind(Part2.Interaction.vPairs[23,], rep(NA, 6),
Part2.Interaction.vPairs[26:27,])
Part2.Interaction.vPairs.Testing.3 <-   rbind(Part2.Interaction.vPairs[24,], Part2.Interaction.vPairs[26,],
rep(NA, 6), Part2.Interaction.vPairs[28,])
Part2.Interaction.vPairs.Testing.4 <-   rbind(Part2.Interaction.vPairs[25,], Part2.Interaction.vPairs[27,],
Part2.Interaction.vPairs[28,], rep(NA, 6))
Part2.Condition.Combo.Testing <- cbind.data.frame (
Part2.Condition.Testing$Condition2, Part2.Condition.Testing$N,
Part2.Condition.Testing$RespCorr, Part2.Condition.Testing$se,
Part2.Interaction.vChance$z.ratio[5:8],Part2.Interaction.vChance$p.value[5:8],
Part2.Interaction.vPairs.Testing.1$p.value, Part2.Interaction.vPairs.Testing.2$p.value,
Part2.Interaction.vPairs.Testing.3$p.value, Part2.Interaction.vPairs.Testing.4$p.value)
colnames(Part2.Condition.Combo.Testing) <- c("Condition", "n", "Mean", "SE",
"z", "p",
"No Label",
"Iconic",
"Counter-Iconic",
"Conventional"
)
#OUTPUT WHOLE TABLE
OutputTable <- rbind.data.frame(Part2.Condition.Combo, Part2.Condition.Combo.Training, Part2.Condition.Combo.Testing )
OutputTable %>%
mutate_if(is.numeric, round, 3) %>%
mutate_at(.vars = "z", round, 2)%>%
mutate_at(.vars = vars("p", "No Label", "Iconic", "Counter-Iconic", "Conventional"),
funs(ifelse(.<0.001, "<0.001", .))) %>%
knitr::kable(caption = 'Part II- Descriptive Statistics - Condition', "html") %>%
kable_styling(full_width = F) %>%
add_header_above(c("", "Descriptive Stats" = 3,
"Post-Hoc Comparison to Chance" = 2,
"Post-Hoc Comparisons between Conditions (p vals)" = 4),
font_size = 12) %>%
pack_rows("Post-Hoc Comparisons of Conditions (Overall)", 1, 4) %>%
pack_rows("Post-Hoc Comparisons of Conditions (Training Trials)", 5, 8) %>%
pack_rows("Post-Hoc Comparisons of Conditions (Testing Trials)", 9, 12)
#Aggregate our data for plotting
Exp2Data.Agg <- summarySE(Exp2Data, measurevar = "RespCorr", groupvars = c("Condition2", "TrialType", "BlockF"))
#Plot our data
ggplot(data=Exp2Data.Agg, aes(x=BlockF, y=RespCorr, group= Condition2)) +
geom_line(aes(linetype = Condition2, color= Condition2), size = 1.2, position=pd) +
geom_errorbar(aes(ymin= RespCorr - ci, ymax= RespCorr + ci), width= 0.2, size = 1, position=pd) +
scale_color_manual(values= c("#000000", "#007e70","#00b19d", "#00e4ca")) +
scale_linetype_manual(values = c("dashed", rep("solid",3))) +
labs(x="Block", y="Proportion of Correct Responses") +
scale_y_continuous(limits = c(0.4,1), breaks=c(0.5,0.6,0.7,0.8,0.9,1.0)) +
facet_grid(~TrialType, scales="free", space= "free_x") +
labs(linetype = "Condition") +
theme_alan() +
ggtitle("Experiment 2 - Category Label Comparison")
#GGSAVE
ggsave("C:/Users/Alan Nielsen/Documents/GitHub/Stekic-et-al/Figures/Experiment 2 - Category Labels.png", plot = last_plot(), device = NULL, path = NULL,
width = 8, height = 4, units = c("in", "cm", "mm"),
dpi = 600)
#Aggregate our data for plotting
Exp2Data.Agg <- summarySE(Exp2Data, measurevar = "RespCorr", groupvars = c("Condition2", "TrialType", "BlockF"))
#Plot our data
ggplot(data=Exp2Data.Agg, aes(x=BlockF, y=RespCorr, group= Condition2)) +
geom_line(aes(linetype = Condition2, color= Condition2), size = 1.2, position=pd) +
geom_errorbar(aes(ymin= RespCorr - ci, ymax= RespCorr + ci, color = Condition2), width= 0.2, size = 1, position=pd) +
scale_color_manual(values= c("#000000", "#007e70","#00b19d", "#00e4ca")) +
scale_linetype_manual(values = c("dashed", rep("solid",3))) +
labs(x="Block", y="Proportion of Correct Responses") +
scale_y_continuous(limits = c(0.4,1), breaks=c(0.5,0.6,0.7,0.8,0.9,1.0)) +
facet_grid(~TrialType, scales="free", space= "free_x") +
labs(linetype = "Condition") +
theme_alan() +
ggtitle("Experiment 2 - Category Label Comparison")
#GGSAVE
ggsave("C:/Users/Alan Nielsen/Documents/GitHub/Stekic-et-al/Figures/Experiment 2 - Category Labels.png", plot = last_plot(), device = NULL, path = NULL,
width = 8, height = 4, units = c("in", "cm", "mm"),
dpi = 600)
#Aggregate our data for plotting
Exp2Data.Agg <- summarySE(Exp2Data, measurevar = "RespCorr", groupvars = c("Condition2", "TrialType", "BlockF"))
#Plot our data
ggplot(data=Exp2Data.Agg, aes(x=BlockF, y=RespCorr, group= Condition2)) +
geom_line(aes(linetype = Condition2, color= Condition2), size = 1.2, position=pd) +
geom_errorbar(aes(ymin= RespCorr - ci, ymax= RespCorr + ci, color = Condition2), width= 0.2, size = 1, position=pd) +
scale_color_manual(values= c("#000000", "#007e70","#00b19d", "#00e4ca")) +
scale_linetype_manual(values = c("dashed", rep("solid",3))) +
labs(x="Block", y="Proportion of Correct Responses") +
scale_y_continuous(limits = c(0.4,1), breaks=c(0.5,0.6,0.7,0.8,0.9,1.0)) +
facet_grid(~TrialType, scales="free", space= "free_x") +
labs(linetype = "Condition", color = "Condition") +
theme_alan() +
ggtitle("Experiment 2 - Category Label Comparison")
#GGSAVE
ggsave("C:/Users/Alan Nielsen/Documents/GitHub/Stekic-et-al/Figures/Experiment 2 - Category Labels.png", plot = last_plot(), device = NULL, path = NULL,
width = 8, height = 4, units = c("in", "cm", "mm"),
dpi = 600)
Exp2Data.Training <- subset(Exp2Data, TrialType == "Training")
afex.Exp2.Block <- mixed(RespCorr ~ Condition2 * Block + (1+ Condition2|ParticipantID),
data=Exp2Data.Training ,
family=binomial,
control=glmerControl(optimizer="bobyqa"),
method = 'LRT')
library(lme4)
library(plyr)
library(ggplot2)
library(afex)
library(emmeans)
library(ggthemes)
library(tidyverse)
library(kableExtra)
library(Hmisc)
library(binom)
library(Rmisc)
library(magick)
library(webshot)
library(magrittr)
library(multcomp)
theme_alan <- function(base_size = 12 , base_family = "")
{
half_line <- base_size/2
colors <- ggthemes_data$few
gray <- colors$medium["gray"]
black <- colors$dark["black"]
theme(
line = element_line(colour = "black", size = 0.5, linetype = 1, lineend = "butt"),
rect = element_rect(fill = "white",
colour = "black", size = 0.5, linetype = 1),
text = element_text(family = base_family, face = "plain", colour = "black",
size = base_size, lineheight = 0.9, hjust = 0.5, vjust = 0.5,
angle = 0, margin = margin(), debug = FALSE),
axis.line = element_blank(),
axis.line.x = NULL,
axis.line.y = NULL,
axis.text = element_text(size = rel(0.8), colour = "grey30"),
axis.text.x = element_text(margin = margin(t = 0.8 * half_line/2), vjust = 1),
axis.text.x.top = element_text(margin = margin(b = 0.8 * half_line/2), vjust = 0),
axis.text.y = element_text(margin = margin(r = 0.8 * half_line/2), hjust = 1),
axis.text.y.right = element_text(margin = margin(l = 0.8 * half_line/2), hjust = 0),
axis.ticks = element_line(colour = "grey20"),
axis.ticks.length = unit(half_line/2, "pt"),
axis.title.x = element_text(margin = margin(t = half_line), vjust = 1),
axis.title.x.top = element_text(margin = margin(b = half_line), vjust = 0),
axis.title.y = element_text(angle = 90, margin = margin(r = half_line), vjust = 1),
axis.title.y.right = element_text(angle = -90, margin = margin(l = half_line), vjust = 0),
legend.background = element_rect(colour = NA),
legend.spacing = unit(0.4, "cm"),
legend.spacing.x = NULL,
legend.spacing.y = NULL,
legend.margin = margin(0.2, 0.2, 0.2, 0.2, "cm"),
legend.key = element_rect(fill = "white", colour = NA),
legend.key.size = unit(1.2, "lines"),
legend.key.height = NULL,
legend.key.width = NULL,
legend.text = element_text(size = rel(0.8)),
legend.text.align = NULL,
legend.title = element_text(hjust = 0),
legend.title.align = NULL,
legend.position = "right",
legend.direction = NULL,
legend.justification = "center",
legend.box = NULL,
legend.box.margin = margin(0, 0, 0, 0, "cm"),
legend.box.background = element_blank(),
legend.box.spacing = unit(0.4, "cm"),
panel.background = element_rect(fill = "white", colour = NA),
panel.border = element_rect(fill = NA, colour = "grey20"),
panel.grid.major = element_line(colour = "grey92"),
panel.grid.minor = element_line(colour = "grey92", size = 0.25),
panel.spacing = unit(half_line, "pt"),
panel.spacing.x = NULL,
panel.spacing.y = NULL,
panel.ontop = FALSE,
strip.background = element_rect(fill = "NA", colour = "NA"),
strip.text = element_text(colour = "grey10", size = rel(0.8)),
strip.text.x = element_text(margin = margin(t = half_line, b = half_line)),
strip.text.y = element_text(angle = 0, margin = margin(l = half_line, r = half_line)),
strip.placement = "inside",
strip.placement.x = NULL,
strip.placement.y = NULL,
strip.switch.pad.grid = unit(0.1, "cm"),
strip.switch.pad.wrap = unit(0.1, "cm"),
plot.background = element_rect(colour = "white"),
plot.title = element_text(size = rel(1.2), hjust = 0, vjust = 1, margin = margin(b = half_line * 1.2)),
plot.subtitle = element_text(size = rel(0.9), hjust = 0, vjust = 1, margin = margin(b = half_line * 0.9)),
plot.caption = element_text(size = rel(0.9), hjust = 1, vjust = 1, margin = margin(t = half_line * 0.9)),
plot.margin = margin(half_line, half_line, half_line, half_line),
complete = TRUE)
}
pd <- position_dodge(width = 0.1)
Exp2Data.Training <- subset(Exp2Data, TrialType == "Training")
afex.Exp2.Block <- mixed(RespCorr ~ Condition2 * Block + (1+ Condition2|ParticipantID),
data=Exp2Data.Training ,
family=binomial,
control=glmerControl(optimizer="bobyqa"),
method = 'LRT')
afex.Exp2.Block$anova_table %>%
data.frame() %>%
tibble::rownames_to_column(var= "Variable") %>%
mutate_if(is.numeric, round, digits = 3) %>%
mutate_all(funs(ifelse(.<0.001, "<0.001", .))) %>%
`colnames<-`(c("Variable", "df", "Chi Sq", "Chi df", "p")) %>%
knitr::kable(caption = "Mixed Model Results - Experiment 2 - Effect of Block", ) %>%
kable_styling(full_width= F)
Exp2Data.Training <- subset(Exp2Data, TrialType == "Training")
afex.Exp2.Block <- mixed(RespCorr ~ Condition2 * Block + (1|ParticipantID),
data=Exp2Data.Training ,
family=binomial,
control=glmerControl(optimizer="bobyqa"),
method = 'LRT')
afex.Exp2.Block$anova_table %>%
data.frame() %>%
tibble::rownames_to_column(var= "Variable") %>%
mutate_if(is.numeric, round, digits = 3) %>%
mutate_all(funs(ifelse(.<0.001, "<0.001", .))) %>%
`colnames<-`(c("Variable", "df", "Chi Sq", "Chi df", "p")) %>%
knitr::kable(caption = "Mixed Model Results - Experiment 2 - Effect of Block", ) %>%
kable_styling(full_width= F)
afex.Exp2.Block$anova_table
#Condition
subset(Exp2Data, TrialType == "Training") %>%
summarySE(measurevar = "RespCorr", groupvars = "Condition2") %>%
mutate_if(is.numeric, round, digits = 3) %>%
knitr::kable(caption = "Experiment 1 - Summary Statistics - Training - Condition -", )
#Interaction
subset(Exp2Data, TrialType == "Training") %>%
summarySE(measurevar = "RespCorr", groupvars = c("Block", "Condition2")) %>%
mutate_if(is.numeric, round, digits = 3) %>%
knitr::kable(caption = "Experiment 1 - Summary Statistics - Training -  Interaction -", )
Exp2Data.Training <- subset(Exp2Data, TrialType == "Training")
afex.Exp2.Block <- mixed(RespCorr ~ Condition2 + Block + (1|ParticipantID),
data=Exp2Data.Training ,
family=binomial,
control=glmerControl(optimizer="bobyqa"),
method = 'LRT')
afex.Exp2.Block$anova_table %>%
data.frame() %>%
tibble::rownames_to_column(var= "Variable") %>%
mutate_if(is.numeric, round, digits = 3) %>%
mutate_all(funs(ifelse(.<0.001, "<0.001", .))) %>%
`colnames<-`(c("Variable", "df", "Chi Sq", "Chi df", "p")) %>%
knitr::kable(caption = "Mixed Model Results - Experiment 2 - Effect of Block", ) %>%
kable_styling(full_width= F)
Exp2Data.Training <- subset(Exp2Data, TrialType == "Training")
afex.Exp2.Block <- mixed(RespCorr ~ Condition2  * Block + (1|ParticipantID),
data=Exp2Data.Training ,
family=binomial,
control=glmerControl(optimizer="bobyqa"),
method = 'LRT')
afex.Exp2.Block$anova_table %>%
data.frame() %>%
tibble::rownames_to_column(var= "Variable") %>%
mutate_if(is.numeric, round, digits = 3) %>%
mutate_all(funs(ifelse(.<0.001, "<0.001", .))) %>%
`colnames<-`(c("Variable", "df", "Chi Sq", "Chi df", "p")) %>%
knitr::kable(caption = "Mixed Model Results - Experiment 2 - Effect of Block", ) %>%
kable_styling(full_width= F)
