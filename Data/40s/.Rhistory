Lupyan2007$se<- NA
Lupyan2007$ci <- NA
#Adding a "study" column to our data
ReplicationAgg2 <- summarySE(ReplicationData2007, measurevar = "RespCorr", groupvars = c("Condition", "TrialType", "Block"))
ReplicationAgg2$Study <- "Stekic et al (2020)"
#Combining the 2 dataframes into 1
ReplicationAgg2 <- rbind(ReplicationAgg2, Lupyan2007)
ReplicationAgg2$Group <- paste(ReplicationAgg2$Study, ReplicationAgg2$Condition)
ReplicationAgg2$Block <- factor(ReplicationAgg2$Block)
#Plotting the Data
ggplot(data=ReplicationAgg2, aes(x=Block, y=RespCorr, group= Group)) +
geom_line(aes(linetype = Condition, color = Study), size = 1.2, position=pd) +
geom_errorbar(aes(ymin= RespCorr - ci, ymax= RespCorr + ci, color = Study), width= 0.2, size = 1, position=pd)+
scale_color_manual(values= c("#0066CC", "#CC0033","#33FF00", "#0066CC", "#CC0033","#33FF00", "#33FF00", "#000000")) +
labs(x="Block", y="Proportion of Correct Responses") +
scale_y_continuous(limits = c(0.45,1), breaks=c(0.5,0.6,0.7,0.8,0.9,1.0)) +
facet_grid(~TrialType, scales="free", space= "free_x") +
theme_alan()+
ggtitle("Replication Performance split by Trial Type, comparing our data to Lupyan et al. (2007)")
ggsave("C:/Users/Alank/Documents/GitHub/Stekic-et-al/Figures/Replication 2007 (Including Lupyan).png", plot = last_plot(), device = NULL, path = NULL,
width = 8, height = 4, units = c("in", "cm", "mm"),
dpi = 600)
afex.Replication <- mixed(RespCorr ~ Condition * TrialType2 + (1|ParticipantID),
data=ReplicationData2007,
family=binomial,
control=glmerControl(optimizer="bobyqa"),
method = 'LRT',
progress=FALSE)
#Pretty up results and kick out as kable
afex.Replication$anova_table %>%
data.frame() %>%
tibble::rownames_to_column(var= "Variable") %>%
mutate_if(is.numeric, round, digits = 3) %>%
mutate_all(funs(ifelse(.<0.001, "<0.001", .))) %>%
`colnames<-`(c("Variable", "df", "Chi Sq", "Chi df", "p")) %>%
knitr::kable(caption = "Mixed Model Results - Replication of Lupyan (2007)", ) %>%
kable_styling(full_width= F)
afex.Replication <- mixed(RespCorr ~ Condition * TrialType2 + (1|ParticipantID),
data=ReplicationData2007,
family=binomial,
control=glmerControl(optimizer="bobyqa"),
method = 'LRT')
#Pretty up results and kick out as kable
afex.Replication$anova_table %>%
data.frame() %>%
tibble::rownames_to_column(var= "Variable") %>%
mutate_if(is.numeric, round, digits = 3) %>%
mutate_all(funs(ifelse(.<0.001, "<0.001", .))) %>%
`colnames<-`(c("Variable", "df", "Chi Sq", "Chi df", "p")) %>%
knitr::kable(caption = "Mixed Model Results - Replication of Lupyan (2007)", ) %>%
kable_styling(full_width= F)
afex.Replication.EM <- emmeans(afex.Replication, ~Condition)
##WordTypes vs. Chance
afex.Replication.vChance <- test(afex.Replication.EM, adjust = "none")
View(afex.Replication.vChance)
summary(afex.Replication)$coefficients  %>%
data.frame() %>%
tibble::rownames_to_column(var= "FixedEffect")
ex.Replication$anova_table %>%
data.frame() %>%
tibble::rownames_to_column(var= "Variable") %>%
mutate_if(is.numeric, round, digits = 3) %>%
mutate_all(funs(ifelse(.<0.001, "<0.001", .))) %>%
`colnames<-`(c("Variable", "df", "Chi Sq", "Chi df", "p")) %>%
knitr::kable(caption = "Mixed Model Results - Replication of Lupyan (2007)", ) %>%
kable_styling(full_width= F)
afex.Replication$anova_table %>%
data.frame() %>%
tibble::rownames_to_column(var= "Variable") %>%
mutate_if(is.numeric, round, digits = 3) %>%
mutate_all(funs(ifelse(.<0.001, "<0.001", .))) %>%
`colnames<-`(c("Variable", "df", "Chi Sq", "Chi df", "p")) %>%
knitr::kable(caption = "Mixed Model Results - Replication of Lupyan (2007)", ) %>%
kable_styling(full_width= F)
str(ReplicationData2007$Condition)
summary(afex.Replication)$coefficients  %>%
data.frame() %>%
tibble::rownames_to_column(var= "FixedEffect")
summary(afex.Replication)$coefficients  %>%
data.frame() %>%
tibble::rownames_to_column(var= "FixedEffect") %>%
mutate(FixedEffect = recode_factor(FixedEffect,
`Condition1` = "No Label",
`TrialType21` = "Testing - Old",
`TrialType22` = "Testing - New"))
afex.Replication <- mixed(RespCorr ~ Condition * TrialType2 + (1|ParticipantID),
data=ReplicationData2007,
family=binomial,
control=glmerControl(optimizer="bobyqa"),
method = 'LRT')
#Pretty up results and kick out as kable
afex.Replication$anova_table %>%
data.frame() %>%
tibble::rownames_to_column(var= "Variable") %>%
mutate_if(is.numeric, round, digits = 3) %>%
mutate_all(funs(ifelse(.<0.001, "<0.001", .))) %>%
`colnames<-`(c("Variable", "df", "Chi Sq", "Chi df", "p")) %>%
knitr::kable(caption = "Mixed Model Results - Replication of Lupyan (2007)", ) %>%
kable_styling(full_width= F)
##Fixed Effects
summary(afex.Replication)$coefficients  %>%
data.frame() %>%
tibble::rownames_to_column(var= "FixedEffect") %>%
mutate(FixedEffect = recode_factor(FixedEffect,
`Condition1` = "No Label",
`TrialType21` = "Testing - Old",
`TrialType22` = "Testing - New",
`Condition1:TrialType21` = "No Label x Testing - Old",
`Condition1:TrialType22` = "No Label x Testing - New"
)) %>%
`colnames<-`(c("Fixed Effect", "Estimate", "SE", "z", "p")) %>%
mutate_if(is.numeric, round, digits = 3) %>%
mutate_at("p", funs(ifelse(.<0.001, "<0.001", .))) %>%
knitr::kable(caption = "Word Type Comparison- Fixed Effects Table", ) %>%
kable_styling(full_width= F) %>%
pack_rows("Intercept", 1, 1) %>%
pack_rows("Condition", 2, 2) %>%
pack_rows("Trial Type", 3, 4)%>%
pack_rows("Interaction", 5, 6)
afex.Replication.EM <- emmeans(afex.Replication, ~Condition)
##WordTypes vs. Chance
afex.Replication.vChance <- test(afex.Replication.EM, adjust = "none")
afex.Replication.EM <- emmeans(afex.Replication, ~Condition * TrialType2)
View(afex.Replication)
afex.Replication.vChance <- test(afex.Replication.EM, adjust = "none")
View(afex.Replication.vChance)
afex.Replication.Block <- mixed(RespCorr ~ Condition * Block + (1|ParticipantID),
data=subset(ReplicationData2007, TrialType2 == "Testing") ,
family=binomial,
control=glmerControl(optimizer="bobyqa"),
method = 'LRT')
View(ReplicationData2007)
subset(ReplicationData2007, TrialType2 == "Testing")
afex.Replication.Block <- mixed(RespCorr ~ Condition * Block + (1|ParticipantID),
data=subset(ReplicationData2007, TrialType2 == "Training") ,
family=binomial,
control=glmerControl(optimizer="bobyqa"),
method = 'LRT')
afex.Replication.Block <- mixed(RespCorr ~ Condition * Block + (1|ParticipantID),
data=subset(ReplicationData2007, TrialType2 == "Training") ,
family=binomial,
control=glmerControl(optimizer="bobyqa"),
method = 'LRT')
afex.Replication.Block$anova_table
View(CleanData4)
afex.Replication <- mixed(RespCorr ~ Condition * TrialType2 + (1|ParticipantID),
data=ReplicationData2007,
family=binomial,
control=glmerControl(optimizer="bobyqa"),
method = 'LRT')
#Pretty up results and kick out as kable
afex.Replication$anova_table %>%
data.frame() %>%
tibble::rownames_to_column(var= "Variable") %>%
mutate_if(is.numeric, round, digits = 3) %>%
mutate_all(funs(ifelse(.<0.001, "<0.001", .))) %>%
`colnames<-`(c("Variable", "df", "Chi Sq", "Chi df", "p")) %>%
knitr::kable(caption = "Mixed Model Results - Replication of Lupyan (2007)", ) %>%
kable_styling(full_width= F)
##Fixed Effects
summary(afex.Replication)$coefficients  %>%
data.frame() %>%
tibble::rownames_to_column(var= "FixedEffect") %>%
mutate(FixedEffect = recode_factor(FixedEffect,
`Condition1` = "No Label",
`TrialType21` = "Testing - Old",
`TrialType22` = "Testing - New",
`Condition1:TrialType21` = "No Label x Testing - Old",
`Condition1:TrialType22` = "No Label x Testing - New"
)) %>%
`colnames<-`(c("Fixed Effect", "Estimate", "SE", "z", "p")) %>%
mutate_if(is.numeric, round, digits = 3) %>%
mutate_at("p", funs(ifelse(.<0.001, "<0.001", .))) %>%
knitr::kable(caption = "Word Type Comparison- Fixed Effects Table", ) %>%
kable_styling(full_width= F) %>%
pack_rows("Intercept", 1, 1) %>%
pack_rows("Condition", 2, 2) %>%
pack_rows("Trial Type", 3, 4)%>%
pack_rows("Interaction", 5, 6)
afex.Replication.RT <- mixed(RT ~ Condition * TrialType2 + (1|ParticipantID),
data=ReplicationData2007,
control=glmerControl(optimizer="bobyqa"),
method = 'LRT')
afex.Replication.RT <- mixed(RT ~ Condition * TrialType2 + (1|ParticipantID),
data=ReplicationData2007,
method = 'LRT')
#Pretty up results and kick out as kable
afex.Replication.RT$anova_table %>%
data.frame() %>%
tibble::rownames_to_column(var= "Variable") %>%
mutate_if(is.numeric, round, digits = 3) %>%
mutate_all(funs(ifelse(.<0.001, "<0.001", .))) %>%
`colnames<-`(c("Variable", "df", "Chi Sq", "Chi df", "p")) %>%
knitr::kable(caption = "Mixed Model Results - Replication of Lupyan (2007)", ) %>%
kable_styling(full_width= F)
##Fixed Effects
summary(afex.Replication.RT)$coefficients  %>%
data.frame() %>%
tibble::rownames_to_column(var= "FixedEffect") %>%
mutate(FixedEffect = recode_factor(FixedEffect,
`Condition1` = "No Label",
`TrialType21` = "Testing - Old",
`TrialType22` = "Testing - New",
`Condition1:TrialType21` = "No Label x Testing - Old",
`Condition1:TrialType22` = "No Label x Testing - New"
)) %>%
`colnames<-`(c("Fixed Effect", "Estimate", "SE", "z", "p")) %>%
mutate_if(is.numeric, round, digits = 3) %>%
mutate_at("p", funs(ifelse(.<0.001, "<0.001", .))) %>%
knitr::kable(caption = "Word Type Comparison- Fixed Effects Table", ) %>%
kable_styling(full_width= F) %>%
pack_rows("Intercept", 1, 1) %>%
pack_rows("Condition", 2, 2) %>%
pack_rows("Trial Type", 3, 4)%>%
pack_rows("Interaction", 5, 6)
summary(afex.Replication.RT)$coefficients  %>%
data.frame() %>%
tibble::rownames_to_column(var= "FixedEffect")
afex.Replication.RT <- mixed(RT ~ Condition * TrialType2 + (1|ParticipantID),
data=ReplicationData2007,
method = 'LRT')
#Pretty up results and kick out as kable
afex.Replication.RT$anova_table %>%
data.frame() %>%
tibble::rownames_to_column(var= "Variable") %>%
mutate_if(is.numeric, round, digits = 3) %>%
mutate_all(funs(ifelse(.<0.001, "<0.001", .))) %>%
`colnames<-`(c("Variable", "df", "Chi Sq", "Chi df", "p")) %>%
knitr::kable(caption = "Mixed Model Results - Replication of Lupyan (2007)", ) %>%
kable_styling(full_width= F)
##Fixed Effects
summary(afex.Replication.RT)$coefficients  %>%
data.frame() %>%
tibble::rownames_to_column(var= "FixedEffect") %>%
mutate(FixedEffect = recode_factor(FixedEffect,
`Condition1` = "No Label",
`TrialType21` = "Testing - Old",
`TrialType22` = "Testing - New",
`Condition1:TrialType21` = "No Label x Testing - Old",
`Condition1:TrialType22` = "No Label x Testing - New"
)) %>%
`colnames<-`(c("Fixed Effect", "Estimate", "SE", "z", "p")) %>%
mutate_if(is.numeric, round, digits = 3) %>%
mutate_at("p", funs(ifelse(.<0.001, "<0.001", .))) %>%
knitr::kable(caption = "Word Type Comparison- Fixed Effects Table", ) %>%
kable_styling(full_width= F) %>%
pack_rows("Intercept", 1, 1) %>%
pack_rows("Condition", 2, 2) %>%
pack_rows("Trial Type", 3, 4)%>%
pack_rows("Interaction", 5, 6)
summary(afex.Replication.RT)$coefficients  %>%
data.frame() %>%
tibble::rownames_to_column(var= "FixedEffect") %>%
mutate(FixedEffect = recode_factor(FixedEffect,
`Condition1` = "No Label",
`TrialType21` = "Testing - Old",
`TrialType22` = "Testing - New",
`Condition1:TrialType21` = "No Label x Testing - Old",
`Condition1:TrialType22` = "No Label x Testing - New"
)) %>%
`colnames<-`(c("Fixed Effect", "Estimate", "SE", "z", "p"))
summary(afex.Replication.RT)$coefficients  %>%
data.frame() %>%
tibble::rownames_to_column(var= "FixedEffect") %>%
mutate(FixedEffect = recode_factor(FixedEffect,
`Condition1` = "No Label",
`TrialType21` = "Testing - Old",
`TrialType22` = "Testing - New",
`Condition1:TrialType21` = "No Label x Testing - Old",
`Condition1:TrialType22` = "No Label x Testing - New"
))
afex.Replication.RT <- mixed(RT ~ Condition * TrialType2 + (1|ParticipantID),
data=ReplicationData2007,
method = 'LRT')
#Pretty up results and kick out as kable
afex.Replication.RT$anova_table %>%
data.frame() %>%
tibble::rownames_to_column(var= "Variable") %>%
mutate_if(is.numeric, round, digits = 3) %>%
mutate_all(funs(ifelse(.<0.001, "<0.001", .))) %>%
`colnames<-`(c("Variable", "df", "Chi Sq", "Chi df", "p")) %>%
knitr::kable(caption = "Mixed Model Results - Replication of Lupyan (2007)", ) %>%
kable_styling(full_width= F)
##Fixed Effects
summary(afex.Replication.RT)$coefficients  %>%
data.frame() %>%
tibble::rownames_to_column(var= "FixedEffect") %>%
mutate(FixedEffect = recode_factor(FixedEffect,
`Condition1` = "No Label",
`TrialType21` = "Testing - Old",
`TrialType22` = "Testing - New",
`Condition1:TrialType21` = "No Label x Testing - Old",
`Condition1:TrialType22` = "No Label x Testing - New"
)) %>%
`colnames<-`(c("Fixed Effect", "Estimate", "SE", "df", "t", "p")) %>%
mutate_if(is.numeric, round, digits = 3) %>%
mutate_at("p", funs(ifelse(.<0.001, "<0.001", .))) %>%
knitr::kable(caption = "Word Type Comparison- Fixed Effects Table", ) %>%
kable_styling(full_width= F) %>%
pack_rows("Intercept", 1, 1) %>%
pack_rows("Condition", 2, 2) %>%
pack_rows("Trial Type", 3, 4)%>%
pack_rows("Interaction", 5, 6)
afex.Replication.RT <- mixed(RT ~ Condition * TrialType2 + (1|ParticipantID),
data=ReplicationData2007,
method = 'LRT')
#Pretty up results and kick out as kable
afex.Replication.RT$anova_table %>%
data.frame() %>%
tibble::rownames_to_column(var= "Variable") %>%
mutate_if(is.numeric, round, digits = 3) %>%
mutate_all(funs(ifelse(.<0.001, "<0.001", .))) %>%
`colnames<-`(c("Variable", "df", "Chi Sq", "Chi df", "p")) %>%
knitr::kable(caption = "Mixed Model Results - Replication of Lupyan (2007)", ) %>%
kable_styling(full_width= F)
##Fixed Effects
summary(afex.Replication.RT)$coefficients  %>%
data.frame() %>%
tibble::rownames_to_column(var= "FixedEffect") %>%
mutate(FixedEffect = recode_factor(FixedEffect,
`Condition1` = "No Label",
`TrialType21` = "Testing - Old",
`TrialType22` = "Testing - New",
`Condition1:TrialType21` = "No Label x Testing - Old",
`Condition1:TrialType22` = "No Label x Testing - New"
)) %>%
`colnames<-`(c("Fixed Effect", "Estimate", "SE", "df", "t", "p")) %>%
mutate_if(is.numeric, round, digits = 3) %>%
mutate_at("p", funs(ifelse(.<0.001, "<0.001", .))) %>%
knitr::kable(caption = "Word Type Comparison- Fixed Effects Table", ) %>%
kable_styling(full_width= F) %>%
pack_rows("Intercept", 1, 1) %>%
pack_rows("Condition", 2, 2) %>%
pack_rows("Trial Type", 3, 4)%>%
pack_rows("Interaction", 5, 6)
ReplicationAggRT <- summarySE(ReplicationData2007, measurevar = "RT", groupvars = c("Condition", "TrialType2", "Block"))
ReplicationAggRT$Block <- factor(ReplicationAggRT$Block)
#Plot our data
ggplot(data=ReplicationAggRT, aes(x=Block, y=RT, group= Condition)) +
geom_line(aes(linetype = Condition), size = 1.2, position=pd) +
geom_errorbar(aes(ymin= RT - ci, ymax= RT + ci), width= 0.2, size = 1, position=pd)+
scale_color_manual(values= c("#0066CC", "#CC0033","#33FF00", "#000000")) +
labs(x="Block", y="Response Time (ms)") +
scale_y_continuous(limits = c(0.45,1), breaks=c(0.5,0.6,0.7,0.8,0.9,1.0)) +
facet_grid(~TrialType2, scales="free", space= "free_x") +
theme_alan() +
ggtitle("Replication of Lupyan (2017)- Response Times")
#GGSAVE
ggsave("C:/Users/Alank/Documents/GitHub/Stekic-et-al/Figures/Replication 2007 - Response Times.png", plot = last_plot(), device = NULL, path = NULL,
width = 8, height = 4, units = c("in", "cm", "mm"),
dpi = 600)
afex.Replication.RT <- mixed(RT ~ Condition * TrialType2 + (1|ParticipantID),
data=ReplicationData2007,
method = 'LRT')
#Pretty up results and kick out as kable
afex.Replication.RT$anova_table %>%
data.frame() %>%
tibble::rownames_to_column(var= "Variable") %>%
mutate_if(is.numeric, round, digits = 3) %>%
mutate_all(funs(ifelse(.<0.001, "<0.001", .))) %>%
`colnames<-`(c("Variable", "df", "Chi Sq", "Chi df", "p")) %>%
knitr::kable(caption = "Mixed Model Results - Replication of Lupyan (2007)", ) %>%
kable_styling(full_width= F)
##Fixed Effects
summary(afex.Replication.RT)$coefficients  %>%
data.frame() %>%
tibble::rownames_to_column(var= "FixedEffect") %>%
mutate(FixedEffect = recode_factor(FixedEffect,
`Condition1` = "No Label",
`TrialType21` = "Testing - Old",
`TrialType22` = "Testing - New",
`Condition1:TrialType21` = "No Label x Testing - Old",
`Condition1:TrialType22` = "No Label x Testing - New"
)) %>%
`colnames<-`(c("Fixed Effect", "Estimate", "SE", "df", "t", "p")) %>%
mutate_if(is.numeric, round, digits = 3) %>%
mutate_at("p", funs(ifelse(.<0.001, "<0.001", .))) %>%
knitr::kable(caption = "Word Type Comparison- Fixed Effects Table", ) %>%
kable_styling(full_width= F) %>%
pack_rows("Intercept", 1, 1) %>%
pack_rows("Condition", 2, 2) %>%
pack_rows("Trial Type", 3, 4)%>%
pack_rows("Interaction", 5, 6)
ReplicationAggRT <- summarySE(ReplicationData2007, measurevar = "RT", groupvars = c("Condition", "TrialType2", "Block"))
ReplicationAggRT$Block <- factor(ReplicationAggRT$Block)
#Plot our data
ggplot(data=ReplicationAggRT, aes(x=Block, y=RT, group= Condition)) +
geom_line(aes(linetype = Condition), size = 1.2, position=pd) +
geom_errorbar(aes(ymin= RT - ci, ymax= RT + ci), width= 0.2, size = 1, position=pd)+
scale_color_manual(values= c("#0066CC", "#CC0033","#33FF00", "#000000")) +
labs(x="Block", y="Response Time (ms)") +
#scale_y_continuous(limits = c(0.45,1), breaks=c(0.5,0.6,0.7,0.8,0.9,1.0)) +
facet_grid(~TrialType2, scales="free", space= "free_x") +
theme_alan() +
ggtitle("Replication of Lupyan (2017)- Response Times")
#GGSAVE
ggsave("C:/Users/Alank/Documents/GitHub/Stekic-et-al/Figures/Replication 2007 - Response Times.png", plot = last_plot(), device = NULL, path = NULL,
width = 8, height = 4, units = c("in", "cm", "mm"),
dpi = 600)
afex.Replication <- mixed(RespCorr ~ Condition * TrialType2 + (1|ParticipantID),
data=ReplicationData2007,
family=binomial,
control=glmerControl(optimizer="bobyqa"),
method = 'LRT')
#Pretty up results and kick out as kable
afex.Replication$anova_table %>%
data.frame() %>%
tibble::rownames_to_column(var= "Variable") %>%
mutate_if(is.numeric, round, digits = 3) %>%
mutate_all(funs(ifelse(.<0.001, "<0.001", .))) %>%
`colnames<-`(c("Variable", "df", "Chi Sq", "Chi df", "p")) %>%
knitr::kable(caption = "Mixed Model Results - Replication of Lupyan (2007)", ) %>%
kable_styling(full_width= F)
##Fixed Effects
summary(afex.Replication)$coefficients  %>%
data.frame() %>%
tibble::rownames_to_column(var= "FixedEffect") %>%
mutate(FixedEffect = recode_factor(FixedEffect,
`Condition1` = "No Label",
`TrialType21` = "Testing - Old",
`TrialType22` = "Testing - New",
`Condition1:TrialType21` = "No Label x Testing - Old",
`Condition1:TrialType22` = "No Label x Testing - New"
)) %>%
`colnames<-`(c("Fixed Effect", "Estimate", "SE", "z", "p")) %>%
mutate_if(is.numeric, round, digits = 3) %>%
mutate_at("p", funs(ifelse(.<0.001, "<0.001", .))) %>%
knitr::kable(caption = "Word Type Comparison- Fixed Effects Table", ) %>%
kable_styling(full_width= F) %>%
pack_rows("Intercept", 1, 1) %>%
pack_rows("Condition", 2, 2) %>%
pack_rows("Trial Type", 3, 4)%>%
pack_rows("Interaction", 5, 6)
View(CleanData)
install.packages("doBy")
require(reshape2)
require(plyr)
require(magrittr)
require(dplyr)
require(tidyr)
require(doBy)
require(stringr)
data.frame(tapply(CleanData4$Correct, CleanData4$Subcondition, mean))
data.frame(tapply(CleanData4$RespCorr, CleanData4$Subcondition, mean))
View(CleanData4)
CleanData4$holder <- paste(CleanData4$Location, CleanData4$RespKey)
CleanData4$holder <- paste(CleanData4$Location, CleanData4$RespKey, sep = "")
#Adding a column for recoding
CleanData4$holder <- paste(CleanData4$Location, CleanData4$RespKey, sep = "")
CleanData4$Approach <- mapvalues(CleanData4$holder,
from = c("Left39", "Down38", "Up40", "Right37",
"Left37", "Down40", "Up38", "Right39"),
to = c(rep("Approach", 4), rep("Retreat",4)
)
)
KeyPresses <- data.frame(xtabs(RespKey ~ ParticipantID, data=CleanData4))
str(CleanData4$RespKey)
#Adding a column for recoding
CleanData4$holder <- paste(CleanData4$Location, CleanData4$RespKey, sep = "")
#Score a column by whether participants chose to approach or retreat
CleanData4$Approach <- mapvalues(CleanData4$holder,
from = c("Left39", "Down38", "Up40", "Right37",
"Left37", "Down40", "Up38", "Right39"),
to = c(rep("Approach", 4), rep("Retreat",4)
)
)
#First we will check for spammers - participants who vastly over-used any of the response keys
CleanData4$RespKey <- factor(CleanData4$RespKey)
KeyPresses <- data.frame(xtabs(RespKey ~ ParticipantID, data=CleanData4))
CleanData4 %>%
count(ParticipantID, RespKey, sort = TRUE)
CleanData4 %>%
count(ParticipantID, RespKey, sort = FALSE)
#Adding a column for recoding
CleanData4$holder <- paste(CleanData4$Location, CleanData4$RespKey, sep = "")
#Score a column by whether participants chose to approach or retreat
CleanData4$Approach <- mapvalues(CleanData4$holder,
from = c("Left39", "Down38", "Up40", "Right37",
"Left37", "Down40", "Up38", "Right39"),
to = c(rep("Approach", 4), rep("Retreat",4)
)
)
#First we will check for spammers - participants who vastly over-used any of the response keys
CleanData4$RespKey <- factor(CleanData4$RespKey)
KeyPresses <-
CleanData4 %>%
count(ParticipantID, RespKey, sort = FALSE)
View(KeyPresses)
KeyPresses <-
subset(CleanData4, ParticipantID == "6Y5ttiTiYt5QC") %>%
count(ParticipantID, RespKey, sort = FALSE)
#Adding a column for recoding
CleanData4$holder <- paste(CleanData4$Location, CleanData4$RespKey, sep = "")
#Score a column by whether participants chose to approach or retreat
CleanData4$Approach <- mapvalues(CleanData4$holder,
from = c("Left39", "Down38", "Up40", "Right37",
"Left37", "Down40", "Up38", "Right39"),
to = c(rep("Approach", 4), rep("Retreat",4)
)
)
#First we will check for spammers - participants who vastly over-used any of the response keys
CleanData4$RespKey <- factor(CleanData4$RespKey)
KeyPresses <-
CleanData4 %>%
count(ParticipantID, RespKey, sort = FALSE)
str(CleanData4$Approach)
CleanData4$Approach <- factor(CleanData4$Approach)
Approachers <-
CleanData4 %>%
count(ParticipantID, Approach, sort = FALSE)
View(Approachers)
source('~/.active-rstudio-document', echo=TRUE)
